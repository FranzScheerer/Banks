
'''
  Rabin Signature Algorithm
  Copyright (c) 2021 Franz Scheerer, all rights reserved 
'''  

import hashlib

def hvar(x, r):
  num = 0
  for rr in range(r):
      bs = hashlib.md5((x + str(num)).encode()).digest()
      for b in bs:
         num = (num<<8) + b
  return num     

n =  int('54484579843703414781397022013833398762143067998648179'
         '811487836635803964504464083901656259299218229572929705'
         '5403527641541474193637526754279807760301500838475060886'
         '3022835255878643235613257986055103491761223050056433740'
         '30078713701119904568426692953907025821012523562729748486'
         '268943256303301939655264864764726938079844656263480124043'
         '189289333164849621435080198734518829924142968573566217')
sig =  {'m': 'Rabin signature algorithm is very easy.X', 's': int('2834'
        '880232967421422050933102730947360889295507851653318404712050547'
        '369322141926057173330729120667945560546422898886364664541659998'
        '653424700161098311232240133899823370353594779946843206565955545'
        '8651015276269557879250044124182805284026871578850262075319326766'
        '50668180658915413449942713453201968645256232360726392078147225722'
        '36138997972543576920491844053069856627021542183586300445003616')}

assert ( (sig['s'] * sig['s']) % (n) == hvar(sig['m'], 8) )

print("The signature was verified!")

